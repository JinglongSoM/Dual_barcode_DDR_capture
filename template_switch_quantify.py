# -*- coding: utf-8 -*-
"""two_barcodes_library_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dj-T2S99VXOYx5OzQkrgsqIGQlJ2hq_O
"""

import numpy as np
import seaborn as sns
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

def RCP(dna):
    complement = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A', 'N':'N'}
    return ''.join([complement[base] for base in dna[::-1]])

df_R1 = pd.read_csv("/content/drive/MyDrive/Data/Two_barcode_DDR/p320_RuDDR_CSV/p320_RuDDR_Taq3_R1.csv")
df_R2 = pd.read_csv("/content/drive/MyDrive/Data/Two_barcode_DDR/p320_RuDDR_CSV/p320_RuDDR_Taq3_R2.csv")
df_ref= pd.read_csv("/content/drive/MyDrive/Data/Two_barcode_DDR/human_DDR_minipool_ref.csv")

print(len(df_R1))
print(len(df_R2))

df_ref.head(5)

# len(df_ref)

df_R1[['ID', 'Run']] = df_R1['SeqID'].str.split(' ', expand=True)
df_R2[['ID', 'Run']] = df_R2['SeqID'].str.split(' ', expand=True)

df_R1.drop(["SeqID", "quality", "Run"], axis=1, inplace=True)
df_R2.drop(["SeqID", "quality", "Run"], axis=1, inplace=True)

df_R1.head()

df_R1.info()

str_len=list()

for i in df_R1["sequence"]:
  str_len.append(len(str(i)))

df_R1["len"]=str_len

str_len=list()
for j in df_R2["sequence"]:
  str_len.append(len(str(j)))
df_R2["len"]=str_len

df_R1.drop(df_R1[(df_R1.len < 17) | (df_R1.len > 19)].index, inplace=True)
df_R2.drop(df_R2[(df_R2.len < 19) | (df_R2.len > 21)].index, inplace=True)

df_R1.head()

df_R2.head()

df = pd.merge(df_R1, df_R2, on=["ID"], how='inner')
df.head(5)

len(df)

df_clean = df[df['sequence_x'].isin(df_ref.barcode)]

len(df_clean)

Seq_RCP=list()

for i in df_clean["sequence_y"]:
  Seq_RCP.append(RCP(i))

df_clean["sequence_y_rcp"] = Seq_RCP

df_clean.reset_index(inplace=True)

df_clean.info()

pip install biopython

from Bio import Align
aligner = Align.PairwiseAligner()

Align_score=list()

for i in range(len(df_clean)):
    alignments = aligner.align (df_clean["sequence_x"][i], df_clean["sequence_y_rcp"][i])
    Align_score.append(alignments[0].score)

df_clean["Align_score"] = Align_score

df_clean.head(5)

from google.colab import files
df_clean.to_csv('p320_RuDDR_Taq3_w_score.csv', index=False)
files.download('p320_RuDDR_Taq3_w_score.csv')

df_clean[df_clean["Align_score"] > 16].count(axis=1)

df_wrong = df_clean[df_clean["Align_score"] <= 16]

df_switch=df_wrong[df_wrong["sequence_y_rcp"].isin(df_ref["sgRNA sequence"])]

len(df_switch)